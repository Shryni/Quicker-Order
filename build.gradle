buildscript {
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}
apply plugin: 'base'
apply plugin: 'com.moowork.node'

group = 'com.nci.cad'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'



configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
	maven {
		url "https://plugins.gradle.org/m2/"
	}
}
defaultTasks 'build'
wrapper {
	description "Regenerates the Gradle Wrapper files"
	gradleVersion = '5.0'
	distributionUrl = "http://services.gradle.org/distributions/gradle-${gradleVersion}-all.zip"
}

node {
	version = '10.14.1'
	npmVersion = '6.4.1'
	download = true
	download = true
	workDir = file("${project.buildDir}/nodejs")
	npmWorkDir = file("${project.buildDir}/npm")
}
task appNpmInstall(type: NpmTask) {
	description = "Installs all dependencies from package.json"
	workingDir = file("${project.projectDir}/src/main/quickOrder")
	args = ["install"]
}
task appNpmBuild(type: NpmTask) {
	description = "Builds production version of the webapp"
	workingDir = file("${project.projectDir}/src/main/quickOrder")
	args = ["run", "build"]
}

task copyWebApp(type: Copy) {
	from 'src/main/quickOrder/build'
	into 'build/resources/main/static/.'
}
appNpmBuild.dependsOn appNpmInstall
copyWebApp.dependsOn appNpmBuild
compileJava.dependsOn copyWebApp


dependencies {
	implementation files('./quotationComparator-0.0.1.jar')
	//compile ('./quotationComparator-0.0.1.jar')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	//implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt:0.9.0'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'jfree:jfreechart:1.0.13'
	implementation 'joda-time:joda-time:2.10.5'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.27'
	implementation 'javax.servlet:jstl:1.2'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'


	//compile("org.springframework.boot:spring-boot-starter-security")
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
}

test {
	useJUnitPlatform()
}
